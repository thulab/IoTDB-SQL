//1.赋予创建用户权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
CREATE USER user01 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES CREATE_USER on root;
--user01用户登录，执行创建用户
connect user01/pass1234;
CREATE USER user02 'pass1234';
--root登录，查看新增用户列表
connect root/root;
list user;
--清理环境
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;


//2.列出所有用户，列出某用户权限，列出某用户具有的角色以及列出所有用户的角色四种操作的权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP ROLE manager;
<<NULL;
CREATE ROLE manager;
CREATE USER user01 'pass1234';
CREATE USER user02 'pass1234';
GRANT manager TO user01;
GRANT manager TO user02;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
LIST USER PRIVILEGES user02;
--进行赋权
GRANT USER user01 PRIVILEGES LIST_USER on root;
GRANT USER user02 PRIVILEGES CREATE_TIMESERIES on root.**;
--user01登录，执行查看用户
connect user01/pass1234;
LIST USER;
LIST USER PRIVILEGES user01;
LIST USER PRIVILEGES user02;
LIST PRIVILEGES USER user02 on root.**;
LIST ALL ROLE OF USER user02;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP ROLE manager;
<<NULL;


//3.赋予修改所有用户的密码
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
CREATE USER user01 'pass1234';
CREATE USER user02 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES MODIFY_PASSWORD on root;
--user01登录，修改user02密码
connect user01/pass1234;
ALTER USER user02 SET PASSWORD 'passwd';
--user02登录，验证user02是否可正常登录
connect user02/passwd;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;


//4.赋予删除用户权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
CREATE USER user01 'pass1234';
CREATE USER user02 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES DELETE_USER on root;
--user01登录，执行删除user02
connect user01/pass1234;
DROP USER user02;
--查看用户列表中是否减少user02
connect root/root;
list user;
--清理环境
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;


//5.赋予创建存储组权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES SET_STORAGE_GROUP ON root.**;
--user01登录，执行创建存储组
connect user01/pass1234;
set storage group to root.ln;
--查看存储组是否已创建好
connect root/root;
show storage group root.ln;
--清理环境
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//6.赋予删除存储组权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE storage group root.**;
<<NULL;
set storage group to root.ln;
CREATE USER user01 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行授权
GRANT USER user01 PRIVILEGES DELETE_STORAGE_GROUP on root.**;
--user01登录，执行删除存储组
connect user01/pass1234;
delete storage group root.ln;
--清理环境
connect root/root;
show storage group root.**;
DROP USER user01;
<<NULL;
DELETE storage group root.**;
<<NULL;


//7.赋予创建时间序列权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
CREATE STORAGE GROUP root.ln;
CREATE STORAGE GROUP root.sg;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES CREATE_TIMESERIES on root.ln.**;
GRANT USER user01 PRIVILEGES CREATE_TIMESERIES on root.sg.*;
--user01登录，执行创建时间序列
connect user01/pass1234;
create timeseries root.ln.wf01.wt01.temperature with datatype=float,encoding=RLE;
create ALIGNED timeseries root.ln.wf02.wt02 (status BOOLEAN encoding=PLAIN compressor=SNAPPY, temperature FLOAT encoding=PLAIN compressor=SNAPPY);
create timeseries root.sg.d1 with datatype=INT32,encoding=RLE;
--查看时间序列是否已经创建好
connect root/root;
show timeseries root.**;
--清理环境
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//8.赋予插入数据权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE storage group root.**;
<<NULL;
CREATE USER user01 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--创建存储组和时间序列
create storage group root.ln;
create timeseries root.ln.wf01.wt01.temperature with datatype=float,encoding=RLE;
create ALIGNED timeseries root.ln.wf02.wt02 (status BOOLEAN encoding=PLAIN compressor=SNAPPY, temperature FLOAT encoding=PLAIN compressor=SNAPPY); 
--进行赋权
GRANT USER user01 PRIVILEGES INSERT_TIMESERIES on root.**;
--user01登录，执行插入数据并查询
connect user01/pass1234;
insert into root.ln.wf01.wt01(time,temperature) values(1,1);
insert into root.ln.wf02.wt02(time,status,temperature) aligned values(1,true,2.1),(2,false,3.1),(3,true,4.1);
--查询数据
connect root/root;
select * from root.**;
--清理环境
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//9.赋予查询数据权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE storage group root.**;
<<NULL;
CREATE USER user01 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES READ_TIMESERIES on root.**;
insert into root.ln.wf01.wt01(time,temperature) values(1,1);
--user01登录，执行查询数据
connect user01/pass1234;
select temperature from root.ln.wf01.wt01;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DELETE storage group root.**;
<<NULL;


//10.赋予删除数据或时间序列权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE storage group root.**;
<<NULL;
set storage group to root.ln;
CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE;
insert into root.ln.wf01.wt01(time,temperature) values(1,1);
CREATE USER user01 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES DELETE_TIMESERIES on root.**;
--user01登录，执行删除数据
connect user01/pass1234;
delete from root.ln.wf01.wt01.temperature;
--root登录,执行查询，查看数据是否存在
connect root/root;
select temperature from root.ln.wf01.wt01;
--user01登录，执行删除时间序列
connect user01/pass1234;
delete timeseries root.ln.wf01.wt01.temperature;
--root登录,查询时间序列是否存在
connect root/root;
show timeseries root.ln.wf01.wt01.temperature;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DELETE storage group root.**;
<<NULL;


//10.赋予删除存储组权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE storage group root.**;
<<NULL;
set storage group to root.ln;
CREATE USER user01 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行授权
GRANT USER user01 PRIVILEGES DELETE_STORAGE_GROUP on root.**;
--user01登录，执行删除存储组
connect user01/pass1234;
delete storage group root.ln;
--清理环境
connect root/root;
show storage group root.**;
DROP USER user01;
<<NULL;
DELETE storage group root.**;
<<NULL;


//11.赋予创建角色权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE staff;
<<NULL;
CREATE USER user01 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES CREATE_ROLE on root;
--user01登录，执行创建角色
connect user01/pass1234;
create role staff;
--root登录，列出role列表
connect root/root;
list role;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE staff;
<<NULL;


//12.赋予列出所有角色的操作权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP ROLE manager;
<<NULL;
DROP ROLE staff;
<<NULL;
CREATE USER user01 'pass1234';
CREATE USER user02 'pass1234';
CREATE ROLE manager;
CREATE ROLE staff;
GRANT manager TO user02;
GRANT staff TO user02;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES LIST_ROLE on root;
--user01登录，执行查看角色列表权限
connect user01/pass1234;
list role;
LIST ALL ROLE OF USER user02;
LIST ALL USER OF ROLE manager;
LIST ALL USER OF ROLE staff;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP ROLE manager;
<<NULL;
DROP ROLE staff;
<<NULL;


//13.赋予删除角色操作权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
CREATE USER user01 'pass1234';
CREATE ROLE manager;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES DELETE_ROLE on root;
--user01登录，执行删除角色
connect user01/pass1234;
DROP ROLE manager;
--root登录，查看role列表
connect root/root;
list role;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;


//14.赋予注册UDF和卸载UDF操作权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP FUNCTION example;
<<NULL;
DELETE storage group root.**;
<<NULL;
create storage group root.sg;
create timeseries root.sg.d1.s1 with datatype=INT32,encoding=RLE;
create timeseries root.sg.d1.s2 with datatype=INT32,encoding=RLE;
insert into root.sg.d1(time,s1,s2) values(1,23,32);
insert into root.sg.d1(time,s1,s2) values(2,31,19);
insert into root.sg.d1(time,s1,s2) values(3,18,21);
insert into root.sg.d1(time,s1,s2) values(4,20,32);
insert into root.sg.d1(time,s1,s2) values(5,33,17);
insert into root.sg.d1(time,s1,s2) values(6,19,28);
CREATE USER user01 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES CREATE_FUNCTION on root;
GRANT USER user01 PRIVILEGES DROP_FUNCTION on root;
--基本查询数据
select * from root.sg.d1;
--user01登录，注册UDF
connect user01/pass1234;
CREATE FUNCTION example AS 'org.apache.iotdb.udf.UDTFExample';
--root登录，udf数据查询
connect root/root;
SELECT example(*) from root.sg.d1;
--user01登录，卸载UDF
connect user01/pass1234;
DROP FUNCTION example;
--root登录，udf数据查询
SELECT example(*) from root.sg.d1;
<<SQLSTATE;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP FUNCTION example;
<<NULL;
DELETE storage group root.**;
<<NULL;


//15.赋予用户权限
--测试操作
connect root/root;
DELETE storage group root.**;
<<NULL;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
CREATE USER user01 'pass1234';
CREATE USER user02 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES GRANT_USER_PRIVILEGE on root;
--user01登录，执行授权操作
connect user01/pass1234;
GRANT USER user02 PRIVILEGES SET_STORAGE_GROUP ON root.**;
--user02登录，执行操作
connect user02/pass1234;
create storage group root.sg;
--root登录,查看已创建的存储组
connect root/root;
show storage group root.sg;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DELETE storage group root.**;
<<NULL;


//16.撤销用户权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
CREATE USER user01 'pass1234';
CREATE USER user02 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES GRANT_USER_PRIVILEGE on root;
--user01登录，执行授权操作
connect user01/pass1234;
GRANT USER user02 PRIVILEGES SET_STORAGE_GROUP ON root.**;
--user02登录，执行操作
connect user02/pass1234;
create storage group root.sg;
--root登录，查看已创建的存储组
connect root/root;
show storage group root.sg;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES REVOKE_USER_PRIVILEGE on root;
--user01登录，执行撤销user02的创建存储组权限
connect user01/pass1234;
REVOKE USER user02 PRIVILEGES SET_STORAGE_GROUP on root.**;
--user02登录，执行创建存储组
connect user02/pass1234;
set storage group to root.sg1;
<<SQLSTATE;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DELETE storage group root.**;
<<NULL;


//17.赋予角色操作权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
CREATE USER user01 'pass1234';
CREATE ROLE manager;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES GRANT_ROLE_PRIVILEGE on root;
--user01登录，执行角色赋予查询数据权限
connect user01/pass1234;
GRANT ROLE manager PRIVILEGES READ_TIMESERIES ON root.**;
--root登录，查看某角色拥有的权限
connect root/root;
LIST ROLE PRIVILEGES manager;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;


//18.撤销角色操作权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
CREATE USER user01 'pass1234';
CREATE ROLE manager;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES GRANT_ROLE_PRIVILEGE on root;
--user01登录，执行角色赋予查询数据权限
connect user01/pass1234;
GRANT ROLE manager PRIVILEGES READ_TIMESERIES ON root.**;
--root登录，查看某角色拥有的权限
connect root/root;
LIST ROLE PRIVILEGES manager;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES REVOKE_ROLE_PRIVILEGE on root;
--user01登录，执行撤销角色赋予查询数据权限
connect user01/pass1234;
REVOKE ROLE manager PRIVILEGES READ_TIMESERIES ON root.**;
--root登录，查看某角色拥有的权限
connect root/root;
LIST ROLE PRIVILEGES manager;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;


//19.赋予用户角色操作权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP ROLE manager;
<<NULL;
DROP ROLE staff;
<<NULL;
CREATE USER user01 'pass1234';
CREATE USER user02 'pass1234';
CREATE ROLE manager;
CREATE ROLE staff;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
LIST USER PRIVILEGES user02;
--进行赋权
GRANT USER user01 PRIVILEGES GRANT_USER_ROLE on root;
--user01登录，执行赋予user02角色权限
//connect user01/pass1234;
//GRANT manager TO user02;
//GRANT staff TO user02;
--root登录，查看user02所属于的角色
//connect root/root;
//LIST ALL ROLE OF USER user02;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP ROLE manager;
<<NULL;
DROP ROLE staff;
<<NULL;


//20.赋予取消用户角色操作权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP ROLE manager;
<<NULL;
DROP ROLE staff;
<<NULL;
CREATE USER user01 'pass1234';
CREATE USER user02 'pass1234';
CREATE ROLE manager;
CREATE ROLE staff;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES GRANT_USER_ROLE on root;
--user01登录，执行赋予user02角色权限
//connect user01/pass1234;
//GRANT manager TO user02;
//GRANT staff TO user02;
--root登录，执行查看user02角色列表
//connect root/root;
//LIST ALL ROLE OF USER user02;
--撤销user01赋予的角色权限
//GRANT USER user01 PRIVILEGES REVOKE_USER_ROLE on root;
--user01登录，执行撤销user02查看角色列表权限
//connect user01/pass1234;
//REVOKE manager FROM user02;
//REVOKE staff FROM user02;
--root登录，查看user02所有的角色
//connect user02/pass1234;
//LIST ALL ROLE OF USER user02;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP ROLE manager;
<<NULL;
DROP ROLE staff;
<<NULL;


//21.赋予角色权限
--测试操作
connect root/root;
DROP ROLE manager;
<<NULL;
CREATE ROLE manager;
--检验一下是否PRIVILEGES 已经存在（列出角色权限）
LIST ROLE PRIVILEGES manager;
--进行赋权
GRANT ROLE manager PRIVILEGES CREATE_USER ON root;
GRANT ROLE manager PRIVILEGES SET_STORAGE_GROUP ON root.**;
GRANT ROLE manager PRIVILEGES CREATE_ROLE ON root;
--root登录，查看角色拥有的权限列表
connect root/root;
LIST ROLE PRIVILEGES manager;
--清理环境
connect root/root;
DROP ROLE manager;
<<NULL;


//22.角色赋予权限后，再将角色赋予给用户操作
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
CREATE ROLE manager;
--检验一下是否PRIVILEGES 已经存在（列出角色权限）
LIST ROLE PRIVILEGES manager;
--进行赋权
GRANT ROLE manager PRIVILEGES SET_STORAGE_GROUP ON root.**;
--检验一下是否PRIVILEGES 已经存在（列出用户角色）
LIST ALL ROLE OF USER user01;
--进行赋权
GRANT manager TO user01;
--查看user01拥有的权限
LIST USER PRIVILEGES user01;
--user01登录，执行操作
connect user01/pass1234;
create storage group root.db;
--root登录，查看存储组
connect root/root;
show storage group root.db;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//23.用户拥有某权限，所属的角色无任何权限,撤销权限后验证操作权限优先级
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
CREATE ROLE manager;
SET STORAGE GROUP TO root.ln;
--检验一下是否PRIVILEGES 已经存在（列出用户权限和列出角色权限）
LIST USER PRIVILEGES user01;
LIST ROLE PRIVILEGES manager;
--进行赋权
GRANT USER user01 PRIVILEGES CREATE_TIMESERIES on root.**;
GRANT manager TO user01;
--再次查看用户拥有的权限
LIST USER PRIVILEGES user01;
--再次查看角色拥有的权限
LIST ROLE PRIVILEGES manager;
--user01用户登录,执行操作权限
connect user01/pass1234;
CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE;
--root登录，查看时间序列
connect root/root;
show timeseries root.ln.wf01.wt01.temperature;
--撤销用户权限，验证操作权限
REVOKE USER user01 PRIVILEGES CREATE_TIMESERIES on root.**;
--查看用户拥有的权限
LIST USER PRIVILEGES user01;
--user01用户登录,执行操作权限(user01所属的role无任何权限)
connect user01/pass1234;
CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN;
<<SQLSTATE;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//24.用户无任何权限，所属的角色有某权限,撤销权限后验证操作权限优先级
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
CREATE ROLE manager;
--检验一下是否PRIVILEGES 已经存在（列出用户权限和列出角色权限）
LIST USER PRIVILEGES user01;
LIST ROLE PRIVILEGES manager;
--进行赋权
GRANT ROLE manager PRIVILEGES SET_STORAGE_GROUP ON root.**;
GRANT manager TO user01;
--查看角色manager拥有的权限
LIST ROLE PRIVILEGES manager;
--查看user01拥有的权限
LIST USER PRIVILEGES user01;
--user01用户登录,执行操作权限
connect user01/pass1234;
set storage group to root.ln;
--root登录，查看存储组
connect root/root;
show storage group root.ln;
--撤销角色权限，验证操作权限
REVOKE ROLE manager PRIVILEGES SET_STORAGE_GROUP ON root.**;
--查看角色拥有的权限
LIST ROLE PRIVILEGES manager;
--查看user01拥有的权限
LIST USER PRIVILEGES user01;
--user01用户登录,执行操作权限(user01无任何权限)
connect user01/pass1234;
set storage group to root.sg;
<<SQLSTATE;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//25.用户和所属的角色均有某权限，撤销角色权限，验证操作权限优先级
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
CREATE ROLE manager;
--检验一下是否PRIVILEGES 已经存在（列出用户权限和列出角色权限）
LIST USER PRIVILEGES user01;
LIST ROLE PRIVILEGES manager;
--进行赋权
GRANT USER user01 PRIVILEGES SET_STORAGE_GROUP on root.**;
GRANT ROLE manager PRIVILEGES SET_STORAGE_GROUP ON root.**;
GRANT manager TO user01;
--查看角色拥有的权限
LIST ROLE PRIVILEGES manager;
--查看user01拥有的权限
LIST USER PRIVILEGES user01;
--user01用户登录,执行操作权限
connect user01/pass1234;
set storage group to root.ln;
--root登录，查看存储组
connect root/root;
show storage group root.ln;
--撤销角色权限，验证操作权限
REVOKE ROLE manager PRIVILEGES SET_STORAGE_GROUP ON root.**;
--查看角色拥有的权限
LIST ROLE PRIVILEGES manager;
--查看用户拥有的权限
LIST USER PRIVILEGES user01;
--user01用户登录,执行操作权限(user01有该权限)
connect user01/pass1234;
set storage group to root.sg;
--root登录，查看存储组
connect root/root;
show storage group root.sg;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DROP ROLE manager;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//26.用户拥有某权限，删除用户后再次添加回来，验证权限是否存在
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES SET_STORAGE_GROUP on root.**;
--查看用户拥有的权限
LIST USER PRIVILEGES user01;
--user01用户登录,执行操作权限
connect user01/pass1234;
set storage group to root.ln;
--root登录，查看存储组
connect root/root;
show storage group root.ln;
--删除user01，再次添加回来
DROP USER user01;
LIST user;
CREATE USER user01 'pass1234';
--验证该新添加回来的用户是否存在之前的权限
LIST USER PRIVILEGES user01;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//27.角色拥有某权限，删除角色后再次添加回来，验证权限是否存在
--测试操作
connect root/root;
DROP ROLE manager;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE ROLE manager;
--检验一下是否PRIVILEGES 已经存在（列出角色权限）
LIST ROLE PRIVILEGES manager;
--进行赋权
GRANT ROLE manager PRIVILEGES SET_STORAGE_GROUP ON root.**;
--查看角色拥有的权限
LIST ROLE PRIVILEGES manager;
--删除角色manager，再次添加回来
DROP ROLE manager;
list role;
CREATE ROLE manager;
--验证该新添加回来的角色是否存在之前的权限
LIST ROLE PRIVILEGES manager;
--清理环境
connect root/root;
DROP ROLE manager;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//28.用户授予具体路径下某权限，验证其他路径是否有该权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
set storage group to root.ln;
set storage group to root.sg;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES CREATE_TIMESERIES on root.ln.*.**;
--查看user01拥有的权限
LIST USER PRIVILEGES user01;
--user01登录，执行操作
connect user01/pass1234;
CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN;
--root登录，查看时间序列是否已经创建好
connect root/root;
show timeseries root.ln.wf01.wt01.status;
--user01登录，在其他路径执行操作权限
connect user01/pass1234;
create timeseries root.sg.d1.s1 with datatype=float,encoding=RLE;
<<SQLSTATE;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//29.用户授予关于通配符路径root.**和root.sg.*.**的路径，验证创建时间序列的权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
set storage group to root.ln;
set storage group to root.sg;
create timeseries root.sg.d1.s1.m1 with datatype=INT32,encoding=RLE;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES CREATE_TIMESERIES on root.**;
GRANT USER user01 PRIVILEGES DELETE_TIMESERIES on root.sg.*.**;
--user01登录，执行操作
connect user01/pass1234;
CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN;
DELETE TIMESERIES root.sg.d1.s1.m1;
--root登录，查看时间序列是否已经创建好
connect root/root;
show timeseries root.**;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//30.用户授予关于通配符路径root.**.wt01.**的路径，验证插入数据的权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
set storage group to root.ln;
CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE;
CREATE TIMESERIES root.ln.wf02.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE;
CREATE TIMESERIES root.ln.wf03.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES INSERT_TIMESERIES on root.**.wt01.**;
--user01登录，执行插入数据操作
connect user01/pass1234;
insert into root.ln.wf01.wt01(time,temperature) values(1,1);
insert into root.ln.wf02.wt01(time,temperature) values(1,2.1);
insert into root.ln.wf03.wt01(time,temperature) values(1,3.1);
--root登录，查询user01插入的数据是否正确
connect root/root;
select * from root.**;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;


//31.用户授予具体时间序列某权限
--测试操作
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
CREATE USER user01 'pass1234';
set storage group to root.ln;
CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE;
--检验一下是否PRIVILEGES 已经存在（列出用户权限）
LIST USER PRIVILEGES user01;
--进行赋权
GRANT USER user01 PRIVILEGES INSERT_TIMESERIES on root.ln.wf01.wt01.temperature;
--user01登录，执行插入数据操作
connect user01/pass1234;
insert into root.ln.wf01.wt01(time,temperature) values(1,1.1);
--root登录，查询user01插入的数据是否正确
connect root/root;
select * from root.**;
--清理环境
connect root/root;
DROP USER user01;
<<NULL;
DELETE STORAGE GROUP root.**;
<<NULL;
