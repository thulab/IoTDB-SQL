connect root/root;
-- 1. create trigger 名称校验
-- 1.1 异常情况
-- 1.2 正常情况
-- 2. drop trigger 名称校验
-- 2.1 异常情况
-- 2.2 正常情况
-- 3. with 语句中key-value校验
-- 4. create 语句合法性
-- 5. 类内实现校验
-- 5.1 onCreate throws exception
-- 5.2 onDrop throws exeption
-- 5.3 jar 为0
-- 5.4 FailureStrategy throw exception


-- 1.1 名称校验：异常
-- 纯数字
CREATE STATELESS TRIGGER 123
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
<<SQLSTATE;
-- 单引号
CREATE STATELESS TRIGGER 'window_avg_alerter'
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
<<SQLSTATE;
-- 双引号
CREATE STATELESS TRIGGER "window_avg_alerter"
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
<<SQLSTATE;
-- 空值
CREATE STATELESS TRIGGER
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
<<SQLSTATE;
-- 特殊字符‘
CREATE STATELESS TRIGGER ‘n2’
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
<<SQLSTATE;


-- 没有任何trigger创建成功
show triggers;

-- 1.2 名称校验:正常值
-- 空值
CREATE STATELESS TRIGGER `` 
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 无引号
CREATE STATELESS TRIGGER no_quote
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 无引号:下划线开头
CREATE STATELESS TRIGGER _12ab
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 无引号:数字开头
CREATE STATELESS TRIGGER 12ab
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 点
CREATE STATELESS TRIGGER `window.avg.alerter`
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 下划线
CREATE STATELESS TRIGGER `window_avg_alerter`
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 纯数字
CREATE STATELESS TRIGGER `1`
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 中文
CREATE STATELESS TRIGGER `触发器`
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 带空格
CREATE STATEful TRIGGER `stateful trigger`
after INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 特殊字符
CREATE STATELESS TRIGGER `window#avg*alerter`
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 转义
CREATE STATELESS TRIGGER `window$avg\talerter`
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';
-- 关键字
CREATE STATELESS TRIGGER `null`
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';

CREATE STATELESS TRIGGER select
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor';

show triggers;

CREATE TIMESERIES root.sg1.d1.s1 WITH DATATYPE=double, ENCODING=PLAIN;
INSERT INTO root.sg1.d1(timestamp, s1) VALUES (6, 10),(7,12),(8,14),(9,160),(10,null),(11,58);

sleep 500;
-- 2条 defaut lo=50 hi=100
select * from root.ln.alerting;
delete DATABASE root.**;

-- 2. drop trigger 名称检验
-- 2.1 异常case
-- 不加引号
drop trigger 1;<<SQLSTATE;
-- 双引号
drop trigger "window_avg_alerter";<<SQLSTATE;
-- 单引号
drop trigger 'window_avg_alerter';<<SQLSTATE;
-- 删除对象为空
drop trigger ;<<SQLSTATE;
-- 2.2 正常case
-- 空
drop trigger ``;
-- 无引号
drop trigger no_quote;
drop trigger _12ab;
drop trigger 12ab;
drop trigger window_avg_alerter;
-- 点
drop trigger `window.avg.alerter`;
-- 纯数字
drop trigger `1`;
-- 中文
drop trigger `触发器`;
-- 带空格
drop trigger `stateful trigger`;
-- 特殊字符
drop trigger `window#avg*alerter`;
drop trigger `window$avg\talerter`;
-- 关键字
DROP TRIGGER select;
drop trigger null; <<SQLSTATE;
drop trigger `null`;
-- 删除不存在的trigger
drop trigger `null`;<<SQLSTATE;

show triggers;

-- 3. key-value 的key不正确,会忽略
CREATE STATELESS TRIGGER `alert-error`
AFTER INSERT
ON root.sg1.d1.s1
AS 'org.example.DoubleValueMonitor'
WITH (
  "looo" = '5'
);
CREATE DATABASE root.sg1;
CREATE TIMESERIES root.sg1.d1.s1 WITH DATATYPE=double, ENCODING=PLAIN;
INSERT INTO root.sg1.d1(timestamp, s1) VALUES (6, 10),(7,12),(8,14),(9,160),(10,null),(11,58);

sleep 500;
-- 2条
select * from root.ln.alerting;
drop trigger `alert-error`;
delete DATABASE root.**;



-- 4. create 语句合法性
-- 没有trigger类型:0.13版本
CREATE  TRIGGER `window_avg_alerter01`
AFTER INSERT
on root.sg1.d1
AS 'org.example.DoubleValueMonitor'
WITH (
  "lo" = '0',
  'hi' = "10.0"
);
<<SQLSTATE;
-- 错误的trigger类型
CREATE STATE TRIGGER `window_avg_alerter01`
AFTER INSERT
ON root.sg1.d1
AS 'org.example.DoubleValueMonitor'
WITH (
  "lo" = '0',
  'hi' = "10.0"
);
<<SQLSTATE;
-- 错误的触发时机
CREATE stateless TRIGGER `window_avg_alerter01`
AFTER delete
ON root.sg1.d1
AS 'org.example.DoubleValueMonitor'
WITH (
  "lo" = '0',
  'hi' = "10.0"
);
<<SQLSTATE;

-- 没有on子句
CREATE STATELESS TRIGGER `window_avg_alerter01`
AFTER INSERT
AS 'org.example.DoubleValueMonitor'
WITH (
  "lo" = '0',
  'hi' = "10.0"
);
<<SQLSTATE;
-- 不合法的device
CREATE STATELESS TRIGGER `window_avg_alerter01`
AFTER INSERT
on root.root
AS 'org.example.DoubleValueMonitor'
WITH (
  "lo" = '0',
  'hi' = "10.0"
);
<<SQLSTATE;
-- 没有AS子句
CREATE STATELESS TRIGGER `alert02`
before INSERT
ON root.sg1.d1
WITH (
  'lo' = '10'
);
<<SQLSTATE;
-- 类名没有引号
CREATE STATELESS TRIGGER `alert02`
before INSERT
ON root.sg1.d1
AS org.example.DoubleValueMonitor
WITH (
  'lo' = '10'
);
<<SQLSTATE;
-- 类名没有包名
CREATE STATELESS TRIGGER `alert02`
before INSERT
ON root.sg1.d1
AS 'DoubleValueMonitor'
WITH (
  'lo' = '10'
);
<<SQLSTATE;
-- 类名为空
CREATE STATELESS TRIGGER `alert02`
before INSERT
ON root.sg1.d1
AS ''
WITH (
  'lo' = '10',
  "hi" = "80"
);
<<SQLSTATE;
-- with 语句为空
CREATE STATELESS TRIGGER `alert02`
before INSERT
ON root.sg1.d1
AS 'org.example.DoubleValueMonitor'
WITH ();
<<SQLSTATE;
-- on 和 AS语句颠倒
CREATE STATELESS TRIGGER `alert02`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
WITH (
  'lo' = '10',
  hi = 80
);
<<SQLSTATE;
-- AS语句在最后
CREATE STATELESS TRIGGER `alert02`
before INSERT
ON root.sg1.d1
WITH (
  'lo' = '10',
  hi = 80
)
AS 'org.example.DoubleValueMonitor';
<<SQLSTATE;
-- 括号为全角
cREATE STATELESS TRIGGER `alert02`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
WITH （
  'lo' = '10',
  hi = 80
）;
<<SQLSTATE;
-- 类型不匹配
cREATE STATELESS TRIGGER `alert02`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
WITH ('lo'='abc');
<<SQLSTATE;

-- USING 子句
-- 无引号
CREATE STATELESS TRIGGER `using01`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
USING URI file:///data/trigger/stateful-test-0.14-snapshot.jar ;
<<SQLSTATE;
-- 没有uri关键字
CREATE STATELESS TRIGGER `using02`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
USING 'file:///data/trigger/double-value-monitor-0.14-SNAPSHOT.jar' ;
<<SQLSTATE;
-- localpath 不存在
CREATE STATELESS TRIGGER `using03`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
USING URI "file:///data/trigger/stateful-test.jar" ;
<<SQLSTATE;
-- uri 为空
CREATE STATELESS TRIGGER `using04`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
USING URI '';
<<SQLSTATE;
CREATE STATELESS TRIGGER `using05`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
USING URI ;
<<SQLSTATE;
-- null
CREATE STATELESS TRIGGER `using06`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
USING URI null;
<<SQLSTATE;
-- uri 符合格式但为空
CREATE STATELESS TRIGGER `using07`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
USING URI 'file://';
<<SQLSTATE;
-- 不合法
CREATE STATELESS TRIGGER `using08`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
USING URI '/data/trigger/double-value-monitor-0.14-SNAPSHOT.jar';
<<SQLSTATE;
-- 不合法
CREATE STATELESS TRIGGER `using09`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
USING URI `file:///data/trigger/double-value-monitor-0.14-SNAPSHOT.jar`;
<<SQLSTATE;
-- http
CREATE STATELESS TRIGGER `using10`
before INSERT
AS 'org.example.DoubleValueMonitor'
ON root.sg1.d1
USING URI "https://apache-iotdb.feishu.cn/docx/doxcn8DbAHGeQUuwtOaOgsRIBlc";
<<SQLSTATE;

show triggers;
delete DATABASE root.**;<<NULL;


-- 5.1 onCreate throws exception 
CREATE STATELESS TRIGGER `exception-onCreate`
before INSERT
ON root.sg1.d1.s1
AS 'com.timecho.test.ExceptionOnCreateTrigger';
<<SQLSTATE;


-- 5.2 onStop throw exception
CREATE STATELESS TRIGGER `stop-error`
AFTER INSERT
ON root.sg1.ddd.s1
AS 'com.timecho.test.ExceptionOnStopTrigger';

drop trigger `stop-error`; <<SQLSTATE;


-- 5.3 jar 为空
CREATE STATELESS TRIGGER `empty-jar`
AFTER INSERT
ON root.sg1.d1.s1
AS 'com.timecho.test.ExceptionOnStopTrigger'
Using uri "file:///data/trigger/zero.jar";
<<SQLSTATE;


-- 5.4 FailureStrategy throw exception
CREATE STATELESS TRIGGER `getFailureStrategy`
AFTER INSERT
ON root.sg1.d1.s1
AS 'com.timecho.test.ExceptionTrigger';

insert into root.sg1.d1(time, s1) values (1, 2);<<SQLSTATE;

drop trigger getFailureStrategy;

