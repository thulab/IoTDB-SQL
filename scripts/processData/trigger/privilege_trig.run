/*
connect root/root;
// 先不考虑测试权限
// 1 CREATE_TRIGGER
-- 1.1 用户无;用户无&ts不存在
-- 1.2 用户有;
-- 1.3 revoke CREATE_TRIGGER;再create trigger;revoke does not have CREATE_TRIGGER on root.sg2
// 2 DROP_TRIGGER
// 3 **
// 6 ROLE 
drop database root.**;<<NULL;
sleep 2000;

drop user lily_create_trig;<<NULL;
drop trigger trig1;<<NULL;
drop trigger trig2;<<NULL;
drop trigger trig3;<<NULL;

create user lily_create_trig '123456';
CREATE DATABASE root.triggertest;<<NULL;
CREATE TIMESERIES root.triggertest.dev0.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
-- 无任何权限
connect lily_create_trig/123456;
CREATE STATELESS TRIGGER trig1
AFTER INSERT
ON root.triggertest.dev0.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig1'
);<<SQLSTATE;

-- 授权create
connect root/root;
grant USE_TRIGGER on root.triggertest.** to user lily_create_trig;
grant read on root.** to user lily_create_trig;
CREATE DATABASE root.sg2;<<NULL;
CREATE TIMESERIES root.sg2.dev0.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
CREATE TIMESERIES root.triggertest.dev1.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;

connect lily_create_trig/123456;
CREATE STATELESS TRIGGER trig1
AFTER INSERT
ON root.triggertest.dev0.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig1'
);
show triggers;
insert into root.triggertest.dev0(time,s_1) values(1,100);<<SQLSTATE;

CREATE STATELESS TRIGGER trig2
before INSERT
ON root.triggertest.dev1.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig2'
);
CREATE STATELESS TRIGGER trig3
AFTER INSERT
ON root.sg2.dev0.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig3'
);
<<SQLSTATE;
drop trigger trig1;<<SQLSTATE;
drop trigger trig2;<<SQLSTATE;

//connect root/root;
//insert into root.triggertest.dev0(time,s_1) values(1,100);
//select s_1 from root.triggertest.dev0;
//sleep 100;
//select local_trig1,remotetrig1 from root.target.alerting;
//grant user lily_create_trig privileges DROP_TRIGGER on root.triggertest.**;
//
//connect lily_create_trig/123456;
//drop trigger trig1;
//show triggers;
//drop trigger trig2;
//show triggers;
//CREATE STATELESS TRIGGER trig1
//AFTER INSERT
//ON root.triggertest.dev0.s_1
//AS 'TriggerTest'
//WITH (
//  'ts_type' = 'int32',
//  'remote_ip' = '127.0.0.1',
//  'trig_name'='trig1'
//);
//show triggers;
//
//
//connect root/root;
//revoke user lily_create_trig  privileges create_trigger on root.triggertest.**;
//revoke user lily_create_trig  privileges create_trigger on root.sg2.**;<<SQLSTATE;
//
//connect lily_create_trig/123456;
//CREATE STATELESS TRIGGER trig2
//AFTER INSERT
//ON root.triggertest.dev1.s_1
//AS 'TriggerTest'
//WITH (
//  'ts_type' = 'int32',
//  'remote_ip' = '127.0.0.1',
//  'trig_name'='trig2'
//);
//<<SQLSTATE;
//
connect root/root;
drop user lily_create_trig;
delete timeseries root.**;

// grant **
delete timeseries root.**;<<NULL;
drop user lily_create_trig;<<NULL;
drop trigger trig1;<<NULL;
drop trigger trig2;<<NULL;
drop trigger trig3;<<NULL;
create user lily_create_trig '123456';
CREATE DATABASE root.triggertest;<<NULL;
CREATE TIMESERIES root.triggertest.dev0.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
CREATE DATABASE root.sg2;<<NULL;
CREATE TIMESERIES root.sg2.dev0.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
CREATE TIMESERIES root.triggertest.dev1.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
grant USE_TRIGGER on root.** to user lily_create_trig;
grant read on root.** to user lily_create_trig;
list privileges of user lily_create_trig on root.**;
list privileges of user lily_create_trig on root.triggertest.**;
list privileges of user lily_create_trig on root.sg2.**;

connect lily_create_trig/123456;

CREATE STATELESS TRIGGER trig1
before INSERT
ON root.triggertest.dev0.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig1'
);
show triggers;

CREATE STATELESS TRIGGER trig2
AFTER INSERT
ON root.triggertest.dev1.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig2'
);
CREATE STATELESS TRIGGER trig3
AFTER INSERT
ON root.sg2.dev0.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig3'
);
show triggers;
connect root/root;
revoke USE_TRIGGER on root.** from user lily_create_trig;
drop trigger trig1; 
drop trigger trig2; 
drop trigger trig3;
connect lily_create_trig/123456;

CREATE STATELESS TRIGGER trig1
AFTER INSERT
ON root.triggertest.dev0.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig1'
);
<<SQLSTATE;
CREATE STATELESS TRIGGER trig3
AFTER INSERT
ON root.sg2.dev0.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig3'
);
<<SQLSTATE;

connect root/root;
drop user lily_create_trig;
delete timeseries root.**;


//// START_TRIGGER
//delete timeseries root.**;<<NULL;
//drop user lily_create_trig;<<NULL;
//drop user lily_start_trig;<<NULL;
//drop user lily_stop_trig;<<NULL;
//create user lily_start_trig '123456';
//create user lily_stop_trig '123456';
//
//CREATE DATABASE root.triggertest;<<NULL;
//CREATE TIMESERIES root.triggertest.dev0.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
//CREATE DATABASE root.sg2;<<NULL;
//CREATE TIMESERIES root.sg2.dev0.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
//CREATE TIMESERIES root.triggertest.dev1.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
//
//CREATE STATELESS TRIGGER trig1
//AFTER INSERT
//ON root.triggertest.dev0.s_1
//AS 'TriggerTest'
//WITH (
//  'ts_type' = 'int32',
//  'remote_ip' = '127.0.0.1',
//  'trig_name'='trig1'
//);
//show triggers;
//
//CREATE STATELESS TRIGGER trig2
//AFTER INSERT
//ON root.triggertest.dev1.s_1
//AS 'TriggerTest'
//WITH (
//  'ts_type' = 'int32',
//  'remote_ip' = '127.0.0.1',
//  'trig_name'='trig2'
//);
//CREATE STATELESS TRIGGER trig3
//AFTER INSERT
//ON root.sg2.dev0.s_1
//AS 'TriggerTest'
//WITH (
//  'ts_type' = 'int32',
//  'remote_ip' = '127.0.0.1',
//  'trig_name'='trig3'
//);
//
//show triggers;
//
//connect lily_start_trig/123456;
//drop trigger trig3;<<SQLSTATE;
// 
//connect lily_stop_trig/123456;
//drop trigger trig1;<<SQLSTATE;
//
//connect root/root;
////grant user lily_start_trig privileges START_TRIGGER on root.sg2.**;
////grant user lily_stop_trig privileges STOP_TRIGGER on root.triggertest.**;
//grant user lily_stop_trig privileges DROP_TRIGGER on root.triggertest.**;
//list privileges user lily_start_trig on root.sg2.**;
//list privileges user lily_stop_trig on root.triggertest.**;
//
//connect lily_stop_trig/123456;
//drop trigger trig1;
//drop trigger trig3;<<SQLSTATE;
//
//connect root/root;
//show triggers;
//insert into root.triggertest.dev0(time,s_1) values(1,100);
//insert into root.triggertest.dev1(time,s_1) values(2,200);
//insert into root.sg2.dev0(time,s_1) values(3,300);
//select s_1 from root.triggertest.dev0;
//select s_1 from root.triggertest.dev1;
//select s_1 from root.sg2.dev0;
//sleep 100;
//select count(*) from root.target.alerting;
//delete timeseries root.**;
//drop user lily_start_trig;
//drop user lily_stop_trig;

// 6 ROLE
connect root/root;
delete timeseries root.**;<<NULL;
drop role role_trigger;<<NULL;
drop role role_trigger_status;<<NULL;
create role role_trigger;
create role role_trigger_status;
grant USE_TRIGGER on root.triggertest.** to role role_trigger privileges;
grant USE_TRIGGER on root.triggertest.** to role role_trigger;
list privileges of role role_trigger on root.triggertest.**;
list privileges of role role_trigger_status on root.triggertest.**;
CREATE DATABASE root.triggertest;<<NULL;
CREATE TIMESERIES root.triggertest.dev0.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
create user lily_create_trigger '123456';
list privileges of user lily_create_trigger on root.triggertest.**;
grant role role_trigger to lily_create_trigger;
list privileges of user lily_create_trigger on root.triggertest.**;
grant USE_TRIGGER on root.triggertest.** to user lily_create_trigger;
list privileges of user lily_create_trigger on root.triggertest.**;

connect lily_create_trigger/123456;
CREATE STATELESS TRIGGER trig1
AFTER INSERT
ON root.triggertest.dev0.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig1'
);
connect root/root;
insert into root.triggertest.dev0(time,s_1) values(1,100);
insert into root.triggertest.dev0(time,s_1) values(2,500);
-- 2
select * from root.triggertest.dev0;
-- 1
select count(*) from root.target.alerting;

sleep 50;
drop trigger trig1;
show triggers;
drop role role_trigger;
drop role role_trigger_status;
list privileges of user lily_create_trigger on root.triggertest.**;
connect lily_create_trigger/123456;
CREATE STATELESS TRIGGER trig1
AFTER INSERT
ON root.triggertest.dev0.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig1'
);
drop trigger trig1;<<SQLSTATE;
connect root/root;
drop database root.**;<<NULL;
drop user lily_create_trigger; 
drop trigger trig1;<<NULL;
drop trigger trig2;<<NULL;
drop trigger trig3;<<NULL;
*/
