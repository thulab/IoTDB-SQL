-- [1]17:create TIMESERIES root.sg.d0.s0 int32
STRICT{
PASS
}
-- [1]18:insert into root.sg.d0(time,s0) values (-100,-100),(-90,-90),(-50,-50),(-30,-30),(-10,-10),(0,0),(10,10),(20,20),(30,30),(50,50)
STRICT{
0
}

Elapsed Time: 0.0.14
-- [1]22:create function StateDeSerializeException as "com.timecho.udaf.test.exception.StateDeSerializeException"
STRICT{
PASS
}
-- [1]23:select StateDeSerializeException(s0) from root.sg.d0
STRICT{
SQLSTATE : 305: [INTERNAL_SERVER_ERROR(305)] Exception occurred: "select StateDeSerializeException(s0) from root.sg.d0". executeStatement failed. Expression is not analyzed: statedeserializeexception(root.sg.d0.s0)
}
-- [1]26:create function StateDestroyStateException as "com.timecho.udaf.test.exception.StateDestroyStateException"
STRICT{
PASS
}
-- [1]27:select StateDestroyStateException(s0) from root.sg.d0
STRICT{
SQLSTATE : 701: Error occurred during inferring UDF data type: 
java.lang.RuntimeException: ##### beforeDestroy #####
}
-- [1]30:create function StateResetException as "com.timecho.udaf.test.exception.StateResetException"
STRICT{
PASS
}
-- [1]31:select StateResetException(s0) from root.sg.d0
STRICT{
SQLSTATE : 305: [INTERNAL_SERVER_ERROR(305)] Exception occurred: "select StateResetException(s0) from root.sg.d0". executeStatement failed. Expression is not analyzed: stateresetexception(root.sg.d0.s0)
}
-- [1]34:create function StateSerializeException as "com.timecho.udaf.test.exception.StateSerializeException"
STRICT{
PASS
}
-- [1]35:select StateSerializeException(s0) from root.sg.d0
STRICT{
SQLSTATE : 305: [INTERNAL_SERVER_ERROR(305)] Exception occurred: "select StateSerializeException(s0) from root.sg.d0". executeStatement failed. Expression is not analyzed: stateserializeexception(root.sg.d0.s0)
}
-- [1]40:create function UDAFAddInputException as "com.timecho.udaf.test.exception.UDAFAddInputException"
STRICT{
PASS
}
-- [1]41:select UDAFAddInputException(s0) from root.sg.d0
STRICT{
SQLSTATE : 701: Error occurred during inferring UDF data type: 
org.apache.iotdb.udf.api.exception.UDFInputSeriesDataTypeNotValidException: the data type of the input series (index: 0) is not valid. expected: FLOAT. actual: INT32.
}
-- [1]44:create function UDAFBeforeStartException as "com.timecho.udaf.test.exception.UDAFBeforeStartException"
STRICT{
PASS
}
-- [1]45:select UDAFBeforeStartException(s0) from root.sg.d0
STRICT{
SQLSTATE : 701: Error occurred during inferring UDF data type: 
org.apache.iotdb.udf.api.exception.UDFInputSeriesDataTypeNotValidException: the data type of the input series (index: 0) is not valid. expected: FLOAT. actual: INT32.
}
-- [1]49:create function UDAFCombineStateException as "com.timecho.udaf.test.exception.UDAFCombineStateException"
STRICT{
PASS
}
-- [1]50:select UDAFCombineStateException(s0) from root.sg.d0
STRICT{
SQLSTATE : 301: org.apache.iotdb.tsfile.read.common.block.column.IntColumn
}
-- [1]52:select UDAFCombineStateException(s0) from root.sg.d0 group by ([-100,100),10ms)
STRICT{
SQLSTATE : 301: org.apache.iotdb.tsfile.read.common.block.column.IntColumn
}
-- [1]56:create function UDAFCreateStateException as "com.timecho.udaf.test.exception.UDAFCreateStateException"
STRICT{
PASS
}
-- [1]57:select UDAFCreateStateException(s0) from root.sg.d0
STRICT{
SQLSTATE : 301: ######## UDAFCreateStateException # createState ########
}
-- [1]60:create function UDAFOutputFinalException as "com.timecho.udaf.test.exception.UDAFOutputFinalException"
STRICT{
PASS
}
-- [1]61:select UDAFOutputFinalException(s0) from root.sg.d0
STRICT{
SQLSTATE : 701: Error occurred during inferring UDF data type: 
org.apache.iotdb.udf.api.exception.UDFInputSeriesDataTypeNotValidException: the data type of the input series (index: 0) is not valid. expected: FLOAT. actual: INT32.
}
-- [1]68:drop function StateDeSerializeException
STRICT{
PASS
}
-- [1]69:drop function StateDestroyStateException
STRICT{
PASS
}
-- [1]70:drop function StateResetException
STRICT{
PASS
}
-- [1]71:drop function StateSerializeException
STRICT{
PASS
}
-- [1]72:drop function UDAFAddInputException
STRICT{
PASS
}
-- [1]73:drop function UDAFBeforeStartException
STRICT{
PASS
}
-- [1]74:drop function UDAFCombineStateException
STRICT{
PASS
}
-- [1]75:drop function UDAFCreateStateException
STRICT{
PASS
}
-- [1]76:drop function UDAFOutputFinalException
STRICT{
PASS
}
